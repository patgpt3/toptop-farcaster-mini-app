import{getSolanaNetworkFromRpcEndpoint as t}from"./index.mjs";import{readBigInt64LEFromUint8Array as e,readBigInt64LE as n}from"../../utils/buffer/readBigInt64LE.mjs";const r=1e9,a="11111111111111111111111111111111",o="TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA",i="TokenzQdBNbLqP5VEhdkAS6EPFLC1PHnBqCXEpPxuEb";let s=new Intl.NumberFormat(void 0,{style:"currency",currency:"USD",maximumFractionDigits:2});function c(t,e=6,n=!1,r=!1){let a=(parseFloat(t.toString())/1e9).toFixed(e).replace(/0+$/,"").replace(/\.$/,""),o=r?"":" SOL";return n?`${a}${o}`:`${"0"===a?"<0.001":a}${o}`}function u(t,e){let n=parseFloat(t.toString())/1e9,r=s.format(e*n);return"$0.00"===r?"<$0.01":r}function l({amount:t,fee:e,tokenPrice:n}){let r=BigInt(1e9*parseFloat(t)),a=r+e;return{fundingAmountInBaseUnit:r,fundingAmountInUsd:n?u(r,n):void 0,totalPriceInUsd:n?u(a,n):void 0,totalPriceInNativeCurrency:c(a),feePriceInNativeCurrency:c(e),feePriceInUsd:n?u(e,n):void 0}}function d(t){return"version"in t}function f(t,e){let n=(d(t)?t.message:t.compileMessage()).staticAccountKeys.find((t=>t.toBase58()===e));if(!n)throw Error(`Transaction does not contain public key ${e}`);return n}async function m(t,e){return BigInt((d(t)?(await e.getFeeForMessage(t.message)).value:await t.getEstimatedFee(e))??0)}function y(t,e){return{signature:t,parsedTransaction:e,fees:BigInt(e?.meta?.fee||0)}}async function p(t,e){let{value:n}=await e.simulateTransaction(t);return null==n.err&&n.logs?.every((t=>!/insufficient funds/gi.test(t)))}async function g({tx:t,connection:e,client:n}){let r=d(t)?t.message:t.compileMessage(),a=r.staticAccountKeys[0]?.toBase58()??"",o=await m(t,e),i={},s=[];for(let t of r.compiledInstructions){let a=r.staticAccountKeys[t.programIdIndex]?.toBase58()||"";if("TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA"!==a&&"TokenzQdBNbLqP5VEhdkAS6EPFLC1PHnBqCXEpPxuEb"!==a)"11111111111111111111111111111111"!==a?s.push({type:"unknown",program:a}):s.push(await I(t,r));else{let a=await A(t,r,e,n,i);s.push(a),i[a.token.address]=a.token}}return{spender:a,fee:o,instructions:s}}function B(t,r){try{return e(t,r)}catch{}try{return t.readBigInt64LE(r)}catch{}let a=Buffer.from(t);try{return n(a)}catch{}try{return a.subarray(r).readBigInt64LE()}catch{}try{return a.readBigInt64LE(r)}catch{}return 0n}async function A(e,n,r,a,o){let[i,s,c]=e.accountKeyIndexes.map((t=>n.staticAccountKeys[t]));if(!i||!s||!c)throw Error("Invalid instruction");let u=await r.getParsedAccountInfo(s,"confirmed"),l=u.value?.data,d=l?.parsed?.info?.owner,f=l?.parsed?.info?.mint??"",m=o[f];if(!m){let e=await a.getSplTokenMetadata({mintAddress:f,cluster:t(r.rpcEndpoint)});e&&(m={address:f,symbol:e.symbol,decimals:e.decimals})}let y=m?.symbol??"",p=m?.decimals??l?.parsed?.info?.tokenAmount?.decimals??9,g=B(e.data,1);return{type:"spl-transfer",fromAta:i.toBase58(),fromAccount:c.toBase58(),toAta:s.toBase58(),toAccount:d,value:g,token:{symbol:y,decimals:p,address:f}}}async function I(t,e){let[n,r]=t.accountKeyIndexes.map((t=>e.staticAccountKeys[t]));if(!n||!r)throw Error("Invalid instruction");let a=B(t.data,4);return{type:"sol-transfer",fromAccount:n.toBase58(),toAccount:r.toBase58(),value:a,token:{symbol:"SOL",decimals:9}}}export{r as LAMPORTS_PER_SOL,a as SYSTEM_PROGRAM_ID,i as TOKEN_2022_PROGRAM_ID,o as TOKEN_PROGRAM_ID,y as createSolanaTransactionReceipt,u as getDollarsFromLamport,c as getNativeCurrencyFromLamports,l as getSolanaFormattedAmounts,m as getTransactionFees,f as getWalletPublicKeyFromTransaction,p as hasSufficientFunds,d as isVersionedTransaction,g as parseSolanaTransaction};
